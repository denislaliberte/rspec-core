diff --git a/lib/rspec/core/formatters/profile_formatter.rb b/lib/rspec/core/formatters/profile_formatter.rb
index 4b95d93..7162bcc 100644
--- a/lib/rspec/core/formatters/profile_formatter.rb
+++ b/lib/rspec/core/formatters/profile_formatter.rb
@@ -6,12 +6,29 @@ module RSpec
       # @api private
       # Formatter for providing profile output.
       class ProfileFormatter
-        Formatters.register self, :dump_profile
+        Formatters.register self, :dump_profile, :example_group_started, :example_group_finished
 
         def initialize(output)
+          initialize_profile
           @output = output
         end
 
+        def initialize_profile()
+          @clock = RSpec::Core::Time
+          @start = Hash.new(0)
+          @result = Hash.new(0)
+        end
+
+        def example_group_started(group)
+          key =  group.group.metadata[:location]
+          @start[key] = @clock.now
+        end
+
+        def example_group_finished(group)
+          key =  group.group.metadata[:location]
+          @result[key] = @clock.now - @start[key]
+        end
+
         # @private
         attr_reader :output
 
@@ -42,10 +59,12 @@ module RSpec
         end
 
         def dump_profile_slowest_example_groups(profile)
-          return if profile.slowest_groups.empty?
+          slowest_groups = profile.new_calculate_slowest_groups(@result)
+          #slowest_groups = profile.slowest_groups
+          return if slowest_groups.empty?
 
-          @output.puts "\nTop #{profile.slowest_groups.size} slowest example groups:"
-          profile.slowest_groups.each do |loc, hash|
+          @output.puts "\nTop #{slowest_groups.size} slowest example groups:"
+          slowest_groups.each do |loc, hash|
             average = "#{bold(Helpers.format_seconds(hash[:average]))} #{bold("seconds")} average"
             total   = "#{Helpers.format_seconds(hash[:total_time])} seconds"
             count   = Helpers.pluralize(hash[:count], "example")
diff --git a/lib/rspec/core/notifications.rb b/lib/rspec/core/notifications.rb
index 6c363dc..52f0fab 100644
--- a/lib/rspec/core/notifications.rb
+++ b/lib/rspec/core/notifications.rb
@@ -581,6 +581,31 @@ module RSpec::Core
         @slowest_groups ||= calculate_slowest_groups
       end
 
+      def new_calculate_slowest_groups(execution_time)
+        example_groups = {}
+        ##to_h not supported in 2.0 show stopper ?
+        slowest_first = execution_time.sort.reverse.first(number_of_examples).to_h
+
+        examples.each do |example|
+          location = example.example_group.parent_groups.last.metadata[:location]
+          if(slowest_first.has_key?(location))
+            location_hash = example_groups[location] ||= Hash.new(0)
+            location_hash[:count]       += 1
+            next if location_hash.key?(:description)
+            location_hash[:description] = example.example_group.top_level_description
+            location_hash[:total_time] = slowest_first[location]
+          end
+        end
+        # stop if we've only one example group
+        return {} if example_groups.keys.length <= 1
+
+        example_groups.each_value do |hash|
+          hash[:average] = hash[:total_time].to_f / hash[:count]
+        end
+
+        example_groups
+      end
+
     private
 
       def calculate_slowest_groups
